[[plugins]]
repo   = 'Shougo/denite.nvim'
hook_add = '''
    let g:denite_enable_start_insert=1
    let g:denite_source_history_yank_enable=1
      "prefix keyの設定
      nmap <Space> [denite]
      " カレントディレクトリを表示
      nnoremap <silent> [denite]a :<C-u>Denite<Space>file_rec<CR>
      " バッファと最近開いたファイル一覧を表示
      nnoremap <silent> [denite]<Space> :<C-u>Denite -direction=topleft -cursor-wrap=true buffer file_mru<CR>
      " 検索する(結果をプレビューで表示する)
      " nnoremap <silent> [denite]s :<C-u>Denite -auto_preview grep<CR>
      " 前回のバッファを再表示する"
      nnoremap <silent> [denite]b :<C-u>Denite -resume<CR>
      " レジスタ一覧
      nnoremap <silent> [denite]r :<C-u>Denite -direction=topleft -cursor-wrap=true -buffer-name=register register<CR>
'''

hook_post_source = '''
    call denite#custom#option('default', 'prompt', '%')
    " ノーマルモードで起動、jjでノーマルへ
    call denite#custom#option('default', {'mode': 'normal'})
    call denite#custom#map('insert', 'jj', '<denite:enter_mode:normal>')
    " deniteの起動位置をtopに変更
    call denite#custom#option('default', 'direction', 'top')
'''

[[plugins]]
repo      = 'Shougo/neomru.vim'
on_source = ['denite.nvim']

[[plugins]] # load when in insert mode
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#enable_ignore_case = 1
    let g:deoplete#enable_smart_case = 1
'''

hook_post_source = '''
    let g:deoplete#sources = {}
    let g:deoplete#sources._ = ['buffer', 'member', 'tag', 'file', 'dictionary', 'neosnippet', 'ruby']
    let g:deoplete#ignore_sources = {
        \ '_': ['omni']
        \ }
'''

# [[plugins]] # filer 使ってない
# repo = 'Shougo/defx.nvim'

[[plugins]] # search
repo = 'junegunn/fzf'
build = './install --bin'
merged = '0'

[[plugins]] # :Rg とするとsearch
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
    command! -bang -nargs=* Rg
      \ call fzf#vim#grep(
      \   'rg --line-number --no-heading '.shellescape(<q-args>), 0,
      \   fzf#vim#with_preview({'options': '--exact --reverse'}, 'right:60%:wrap'))
'''

[[plugins]]
repo = 'tpope/vim-rails'
on_ft = ['ruby']

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']
hook_post_source = '''
    let g:go_highlight_functions = 1
    let g:go_highlight_methods = 1
    let g:go_highlight_fields = 1
    let g:go_highlight_types = 1
    let g:go_highlight_operators = 1
    let g:go_highlight_build_constraints = 1
    let g:go_highlight_structs = 1
    let g:go_highlight_extra_types = 1
'''

[[plugins]]
repo = 'deoplete-plugins/deoplete-go'
build = 'make'
on_ft = ['go']
# depends = ['deoplete.nvim']
# golangの補完 gocodeのbinaryファイルがないと動かないので注意
hook_source = '''
    let g:deoplete#sources#go#gocode_binary = $GOPATH . '/bin/gocode'
'''

[[plugins]]
repo = 'slim-template/vim-slim'
on_ft = ['slim']

[[plugins]] # TOMLのシンタックスハイライト
repo  = 'cespare/vim-toml'
on_ft = ['toml']
